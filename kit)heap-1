# 방법 1 >> 힙 사용


import heapq

def solution(scoville, K):
    answer = 0
    heapq.heapify(scoville)  # list to heapq

    while scoville[0] < K: # 가장 작은 수가 기준보다 낮다면 계속
        if len(scoville) > 1:
            answer += 1
            first = heapq.heappop(scoville)
            second = heapq.heappop(scoville)
            heapq.heappush(scoville, first + second * 2)
        else:
            return -1
    return answer



# 방법 2 >> 힙 사용 x 시간초과

def scov(sequence):
    
    a = sequence.pop(0)
    b = sequence.pop(0)
    c = a + b * 2
    sequence.append(c)
    return sequence 

def solution(scoville,k):
    cnt = 0
    
    while True:
        scoville.sort()
        if scoville[0] < k :
            if len(scoville) == 1:
                cnt = -1
                break
            else:
                scov(scoville)
                cnt += 1
                scoville.sort()
        else:
            
            break
    return cnt
