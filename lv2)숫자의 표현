## 맞았지만 효율성에서 걸린 코드

def solution(n):
    
    array = [i for i in range(1,n+1)]  ## min-max배열생성
    l=1
    res = []
    
    while l <= n:

        for i in range(n):
            if sum(array[i:i+l]) == n:
                res.append(tuple(array[i:i+l]))
        l += 1

    answer = len(list(set(res)))
   
    return answer
    
    ## 효율성까지 따진 코드
    def solution(n):
    array = [i for i in range(1,n+1)]  # min-max배열생성
    
    if n == 1:
        answer = 1
        
    else:
        result = []
        for i in range(len(array)):  
            for j in range(0,len(array)):  
                if sum(array[i:i+j]) == n:
                    result.append((array[i:i+j]))
                    break
                if sum(array[i:i+j]) > n:  #sum이 n보다 큰 경우 break하는 블록을 넣어주어야 불필요한 계산 x
                    break
        answer = len(result)     
            
    return answer
    
  # 내 풀이
  
  def solution(n):
    answer = 0
    number = [i for i in range(1,n+1)]
    if n == 1:
        answer = 1
    else:
        cnt = 0
        for i in range(len(number)):
            for j in range(len(number)-(i-1)):  # 맨 마지막 원소 15가 15번 계산되므로 15는 1번만 계산되게 함
                if sum(number[i:i+j]) == n:
                    cnt += 1
                elif sum(number[i:i+j]) > n:
                    break
        answer = cnt
    return answer
